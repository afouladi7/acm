---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    openshift.io/cluster-monitoring: "true"
  name: demo
spec: {}
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: view
  namespace: demo
subjects:
  - kind: ServiceAccount
    name: default
    namespace: demo
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
---  
apiVersion: apps/v1
kind: Deployment
metadata:
  name: parksmap
  namespace: demo
  labels:
    app: workshop
    app.kubernetes.io/component: parksmap
    app.kubernetes.io/instance: parksmap
    app.kubernetes.io/name: parksmap
    app.kubernetes.io/part-of: workshop
    component: parksmap
    role: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parksmap
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: parksmap
        component: parksmap
        deploymentconfig: parksmap
        role: frontend
    spec:
      containers:
        - name: parksmap
          image: >-
            quay.io/openshiftroadshow/parksmap:latest
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
---
kind: Service
apiVersion: v1
metadata:
  name: parksmap
  namespace: demo
  labels:
    app: parksmap
    app.kubernetes.io/component: parksmap
    app.kubernetes.io/instance: parksmap
    app.kubernetes.io/name: parksmap
    app.kubernetes.io/part-of: parksmap-app
    app.openshift.io/runtime-version: latest
spec:
  selector:
    app: parksmap
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: parksmap
  namespace: demo
spec:
  path: /
  to:
    kind: Service
    name: parksmap
  port:
    targetPort: 8080
  tls:
    termination: edge
  wildcardPolicy: None
---
kind: BuildConfig
apiVersion: build.openshift.io/v1
metadata:
  annotations:
    app.openshift.io/vcs-ref: ''
    app.openshift.io/vcs-uri: 'https://github.com/chengkuangan/nationalparks.git'
  name: nationalparks
  namespace: demo
  labels:
    app: workshop
    app.kubernetes.io/part-of: workshop
    app.kubernetes.io/instance: nationalparks
    app.kubernetes.io/component: nationalparks
    app.openshift.io/runtime: java
    role: backend
    app.kubernetes.io/name: nationalparks
    component: nationalparks
    app.openshift.io/runtime-version: openjdk-11-el7
spec:
  nodeSelector: null
  output:
    to:
      kind: ImageStreamTag
      name: 'nationalparks:latest'
  resources: {}
  successfulBuildsHistoryLimit: 5
  failedBuildsHistoryLimit: 5
  strategy:
    type: Source
    sourceStrategy:
      from:
        kind: ImageStreamTag
        namespace: openshift
        name: 'java:openjdk-11-el7'
  postCommit: {}
  source:
    type: Git
    git:
      uri: 'https://github.com/chengkuangan/nationalparks.git'
    contextDir: /
  triggers:
    - type: Generic
      generic:
        secretReference:
          name: nationalparks-generic-webhook-secret
    - type: GitHub
      github:
        secretReference:
          name: nationalparks-github-webhook-secret
    - type: ConfigChange
  runPolicy: Serial
---
kind: Service
apiVersion: v1
metadata:
  name: nationalparks
  namespace: demo
  labels:
    app: nationalparks
    app.kubernetes.io/component: nationalparks
    app.kubernetes.io/instance: nationalparks
    app.kubernetes.io/name: nationalparks
    app.kubernetes.io/part-of: nationalparks-app
    app.openshift.io/runtime-version: latest
spec:
  selector:
    app: nationalparks
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: nationalparks
  nnamespace: demo
spec:
  path: /
  to:
    kind: Service
    name: nationalparks
  port:
    targetPort: 8080
  tls:
    termination: edge
  wildcardPolicy: None